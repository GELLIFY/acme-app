name: Deploy Preview on AWS Amplify (stub)

inputs:
  AWS_ACCESS_KEY_ID:
    description: AWS access key id
    required: true
  AWS_SECRET_ACCESS_KEY:
    description: AWS secret access key
    required: true
  AWS_REGION:
    description: AWS region, e.g. eu-central-1
    required: true
  AMPLIFY_APP_ID:
    description: Amplify App ID
    required: true
  AMPLIFY_BRANCH:
    description: Branch name to create/update for preview
    required: true
  DATABASE_URL:
    description: Runtime/build env var
    required: false
  NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY:
    description: Example of public runtime env var
    required: false

outputs:
  preview_url:
    description: "Preview URL (if retrievable)"
    value: ${{ steps.output_preview.outputs.preview_url }}

runs:
  using: composite
  steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ inputs.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ inputs.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ inputs.AWS_REGION }}

    # NOTE: This is a stub. Uncomment and adapt the following commands to manage Amplify branches
    # and trigger a build using the AWS CLI once you confirm permissions and desired behavior.
    #
    # - name: Ensure Amplify preview branch exists
    #   shell: bash
    #   run: |
    #     set -euo pipefail
    #     BRANCH_NAME="${{ inputs.AMPLIFY_BRANCH }}"
    #     APP_ID="${{ inputs.AMPLIFY_APP_ID }}"
    #     if aws amplify get-branch --app-id "$APP_ID" --branch-name "$BRANCH_NAME" >/dev/null 2>&1; then
    #       echo "Branch exists: $BRANCH_NAME"
    #     else
    #       echo "Creating branch: $BRANCH_NAME"
    #       aws amplify create-branch --app-id "$APP_ID" --branch-name "$BRANCH_NAME"
    #     fi
    #
    # - name: Optionally set environment variables for the branch
    #   shell: bash
    #   run: |
    #     set -euo pipefail
    #     APP_ID="${{ inputs.AMPLIFY_APP_ID }}"
    #     BRANCH_NAME="${{ inputs.AMPLIFY_BRANCH }}"
    #     # Example: set DATABASE_URL as an environment variable at build-time
    #     if [ -n "${{ inputs.DATABASE_URL }}" ]; then
    #       aws amplify update-branch \
    #         --app-id "$APP_ID" \
    #         --branch-name "$BRANCH_NAME" \
    #         --environment-variables DATABASE_URL='${{ inputs.DATABASE_URL }}'
    #     fi
    #
    # - name: Trigger build for branch
    #   shell: bash
    #   run: |
    #     set -euo pipefail
    #     APP_ID="${{ inputs.AMPLIFY_APP_ID }}"
    #     BRANCH_NAME="${{ inputs.AMPLIFY_BRANCH }}"
    #     JOB_ID=$(aws amplify start-job --app-id "$APP_ID" --branch-name "$BRANCH_NAME" --job-type RELEASE --query jobSummary.jobId --output text)
    #     echo "Triggered Amplify build job: $JOB_ID"
    #
    # - name: Retrieve preview URL
    #   id: fetch_preview
    #   shell: bash
    #   run: |
    #     set -euo pipefail
    #     APP_ID="${{ inputs.AMPLIFY_APP_ID }}"
    #     BRANCH_NAME="${{ inputs.AMPLIFY_BRANCH }}"
    #     URL=$(aws amplify get-branch --app-id "$APP_ID" --branch-name "$BRANCH_NAME" --query branch.webUrl --output text)
    #     echo "preview_url=$URL" >> $GITHUB_OUTPUT

    - name: Output placeholder preview URL
      id: output_preview
      shell: bash
      run: |
        echo "preview_url=" >> $GITHUB_OUTPUT
