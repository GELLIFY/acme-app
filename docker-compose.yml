services:
  postgres:
    image: "postgres:16.2-alpine"
    environment:
      POSTGRES_USER: "${DB_USERNAME}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_DB: "${DB_NAME}"
    ports:
      - "5432:5432"
    volumes:
      - type: bind
        source: ./keycloak/init.sql
        target: /docker-entrypoint-initdb.d/init.sql
        read_only: true
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  pg_proxy:
    image: ghcr.io/neondatabase/wsproxy:latest
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      APPEND_PORT: "postgres:5432"
      ALLOW_ADDR_REGEX: ".*"
      LOG_TRAFFIC: "true"
    ports:
      - "5433:80"

  keycloak:
    image: "quay.io/keycloak/keycloak:24.0"
    depends_on:
      postgres:
        condition: service_healthy
    command:
      - "start-dev"
      - --import-realm
    ports:
      - "8080:8080"
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/${DB_NAME}
      KC_DB_PASSWORD: "${DB_PASSWORD}"
      KC_DB_USERNAME: "${DB_USERNAME}"
      KC_DB_SCHEMA: "keycloak"
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: "${KEYCLOAK_ADMIN}"
      KEYCLOAK_ADMIN_PASSWORD: "${KEYCLOAK_ADMIN_PASSWORD}"
    volumes:
      - ./keycloak/realm.json:/opt/keycloak/data/import/realm.json
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "exec 3<>/dev/tcp/127.0.0.1/8080;echo -e \"GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n\" >&3;grep \"HTTP/1.1 200 OK\" <&3",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
